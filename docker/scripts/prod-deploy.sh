#!/bin/bash
# Docker production deployment script

set -e

echo "üê≥ Freedom Fashion - Production Deployment"
echo "=========================================="

# Check if Docker is running
if ! docker info > /dev/null 2>&1; then
    echo "‚ùå Docker is not running. Please start Docker and try again."
    exit 1
fi

# Check if we're in production mode
if [ "$NODE_ENV" != "production" ]; then
    echo "‚ö†Ô∏è  NODE_ENV is not set to 'production'"
    read -p "Continue anyway? (y/N): " confirm
    if [[ $confirm != [yY] ]]; then
        exit 1
    fi
fi

# Create .env file check
if [ ! -f ".env" ]; then
    echo "‚ùå .env file not found. Please create it from .env.production.template"
    exit 1
fi

# Security check for production secrets
echo "üîí Checking production configuration..."
if grep -q "change_in_production\|your_secure\|dev_\|development" .env; then
    echo "‚ùå Found development/placeholder values in .env file!"
    echo "   Please update all placeholder values before deploying to production."
    exit 1
fi

echo "‚úÖ Configuration looks good"

# Build production images
echo "üèóÔ∏è  Building production Docker images..."
docker-compose build --no-cache

# Stop existing containers
echo "üõë Stopping existing containers..."
docker-compose down

# Start production services
echo "üöÄ Starting production services..."
docker-compose up -d

# Wait for services to be ready
echo "‚è≥ Waiting for services to be ready..."
sleep 15

# Check service health
echo "üîç Checking service health..."
docker-compose ps

# Ensure database is ready and migrated
echo "üìä Running database migrations..."
docker-compose exec app npm run db:migrate

# Run health check
echo "üíö Running health check..."
if curl -f http://localhost/health > /dev/null 2>&1; then
    echo "‚úÖ Application is healthy"
else
    echo "‚ùå Health check failed"
    echo "üìã Checking logs..."
    docker-compose logs app
    exit 1
fi

echo ""
echo "‚úÖ Production deployment completed successfully!"
echo ""
echo "üìã Service URLs:"
echo "   Application: http://localhost (or your domain)"
echo "   Health Check: http://localhost/health"
echo ""
echo "üõ†Ô∏è  Management commands:"
echo "   View logs:           docker-compose logs -f"
echo "   Stop services:       docker-compose down"
echo "   Restart app:         docker-compose restart app"
echo "   Database backup:     docker-compose exec postgres pg_dump -U freedom_user freedom_fashion > backup.sql"
echo "   Scale app:           docker-compose up -d --scale app=3"
echo ""
echo "üîç Monitor the application:"
echo "   docker-compose logs -f app"
echo ""
